# -*- coding: utf-8 -*-
"""Untitled145.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VU1pJVD5qE850LF1Sm1Hspu_CV9EdKIm
"""

import os
import io
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from google.cloud import vision
import google.generativeai as genai

system_prompt = """
You are the automatic bill analyser. Extract the total amount, hotel name, date, and time from the photocopy of the bills.
Arrange the extracted information in a table format sorted by date. Compute the total expenditure and compare it with salary in a graph.
"""
google_vision = vision.ImageAnnotatorClient()

genai.configure(api_key="AIzaSyAqxTFd6eXeUU-627CDl9dUXyB-MLQk3yU")
gemini = genai.GenerativeModel(model_name="gemini-1.5-flash", system_instruction=system_prompt)

def extract_text_from_image(image_file):
    """Extracts text from an image using Google Vision OCR."""
    content = image_file.read()
    image = vision.Image(content=content)
    response = google_vision.text_detection(image=image)
    texts = response.text_annotations
    return texts[0].description if texts else "No text detected."

def analyze_invoice(text):
    """Analyzes extracted text using Gemini AI."""
    prompt = f"Extract total amount, hotel name, date, and time:\n\n{text}"
    response = gemini.generate_content(prompt)
    return response.text

st.title("üìÑ Multi Bill Analyzer with AI & Graphs")
st.write("Upload multiple bill images to analyze and compare expenses with salary.")

uploaded_files = st.file_uploader("Upload Bills", type=['png', 'jpg', 'jpeg'], accept_multiple_files=True)

data = []
if uploaded_files:
    for file in uploaded_files:
        st.subheader(f"üìÑ Processing: {file.name}")


        extracted_text = extract_text_from_image(file)

        analysis_result = analyze_invoice(extracted_text)

        try:
            lines = analysis_result.split("\n")
            hotel = next((l.split(":")[-1].strip() for l in lines if "Hotel" in l), "Unknown")
            date = next((l.split(":")[-1].strip() for l in lines if "Date" in l), "Unknown")
            time = next((l.split(":")[-1].strip() for l in lines if "Time" in l), "Unknown")
            amount = next((float(l.split(":")[-1].strip().replace("‚Çπ", "").replace(",", "")) for l in lines if "Total Amount" in l), 0.0)

            data.append([hotel, date, time, amount])
        except Exception as e:
            st.warning(f"Could not process {file.name}: {e}")
if data:
    df = pd.DataFrame(data, columns=["Hotel", "Date", "Time", "Amount"])
    df["Date"] = pd.to_datetime(df["Date"], errors='coerce')
    df = df.sort_values(by="Date")

    st.write("### üìù Extracted Bill Data")
    st.dataframe(df)

    # Compute total expenditure
    total_spent = df["Amount"].sum()
    st.write(f"### üí∞ Total Expenditure: ‚Çπ{total_spent:,.2f}")

    # Salary input
    salary = st.number_input("Enter Monthly Salary (‚Çπ)", min_value=0, value=50000, step=1000)

    # Plot expenses vs salary
    fig, ax = plt.subplots()
    ax.bar(["Salary", "Total Bills"], [salary, total_spent], color=["green", "red"])
    ax.set_ylabel("Amount (‚Çπ)")
    ax.set_title("üíµ Salary vs Expenditure")
    st.pyplot(fig)